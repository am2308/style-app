const jwt = require("jsonwebtoken");
const bcrypt = require("bcryptjs");

// Temporary User Data (In place of DB)
const mockUser = {
  username: "testuser",
  password: bcrypt.hashSync("password123", 10), // Hashed password
};
console.log("Mock user password hash:", mockUser.password);
// Login Handler
exports.login = async (req, res) => {
  const { username, password } = req.body;
  console.log("Login attempt with:", { username, password });

  // Check user existence
  if (username !== mockUser.username) {
    console.log("Invalid username");
    return res.status(401).json({ message: "Invalid username" });
  }

  // Verify Password
  console.log("Password entered:", password);
  console.log("Hashed password:", mockUser.password);
  const isMatch = await bcrypt.compare(password, mockUser.password);
  if (!isMatch) {
    console.log("Invalid password");
    return res.status(401).json({ message: "Invalid password" });
  }

  // Generate JWT Token
  const token = jwt.sign({ username }, process.env.JWT_SECRET, {
    expiresIn: "1h",
  });
  console.log("Login successful, token generated.");
  return res.status(200).json({
    message: "Login successful",
    token, // Send the JWT token
  });
};
